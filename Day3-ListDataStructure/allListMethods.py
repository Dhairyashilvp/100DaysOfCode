#append(x),extend(iterable) , insert(i, x), remove(x), pop([i]), index(x[, start[, end]]), count(x), sort(key=None, reverse=False)
#reverse(), copy(), clear()
lst = [23, 54, 65, 76, 34, 95]
print(lst)
lst.append(50)
print(lst)
lst.extend([30, 40, 40, 50, 50])
print(lst)
lst.insert(3, 55)
print(lst, " inserted element at 3rd position and shifted array forward")
lst.remove(50)
print(lst," 50 Removed")
print(lst)
lst.pop()
print(lst," popped last element")
lst.pop(5)
print(lst," pop element at 5th index")
print(lst.index(30),"Index of element 30")#[, start[, end]]The optional arguments start and end are interpreted as in the slice notation and are used to limit the search to a particular subsequence of the list. The returned index is computed relative to the beginning of the full sequence rather than the start argument.
print(lst.count(40), "count of element 40")
lst.sort(key=None, reverse=False)
print(lst, "sorted asce")
lst.sort(key=None, reverse=True)
print(lst, "sorted desc")
lst.reverse()
print(lst, "reversed")
newLst = lst.copy()
print(newLst, "Copied list newLst")
lst.clear()
print(lst, " After clear New list is not affected")
print(newLst)